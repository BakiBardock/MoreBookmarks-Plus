tributary_war_cb = {
    group = tributary
	ai_only_against_neighbors = yes

	war_name = trib_war_cb
	my_war_name = trib_war_me # Used when the claimant and attacker is the same person
	war_name_base = trib_war_m_b
	my_war_name_base = trib_war_m_b

    truce_days = 970

    allowed_for_character = {
	
		#NB - Changed this to allowed_for_character from allowed_for_character_display_regardless. 
		trigger_if = {
			limit = { is_ai = no }
			prestige_level >= low_prestige_level
		}
		trigger_else = { prestige_level >= medium_prestige_level }
		#END NB
		 
		# Ensure that this is only done every now and then.
		is_independent_ruler = yes
		highest_held_title_tier >= tier_kingdom
		
        NAND = {
            primary_title = {
                tier < tier_county
            }
            scope:attacker.primary_title.tier < scope:defender.primary_title.tier  
            exists = var:my_suzerain
        }
    }
    allowed_against_character = {
		#MB
		OR = {
			character_is_land_realm_neighbor = scope:attacker
			AND = {
				exists = scope:attacker.liege
				character_is_land_realm_neighbor = scope:attacker.liege
			}
		}
		#
        primary_title = {
            tier >= tier_county
        }
        NOT = { exists = var:my_suzerain }
        scope:attacker.primary_title.tier >= scope:defender.primary_title.tier  
        custom_description = {
            text = not_a_tributary
            subject = scope:defender
            NOT = {
                scope:attacker = {
                    is_target_in_variable_list = { name = all_tributaries target = scope:defender }
                }
            }
        } 
    }

    cost = {
        prestige = {
            value = 250
        }
    }

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = trib_on_victory_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = trib_on_victory_desc_defender
			}
			desc = trib_on_victory_desc
		}
	}

    on_victory = {
		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }																
        make_tributary = {
            TYPE = tributary_non_permanent
            SUZERAIN = scope:attacker
            TRIBUTARY = scope:defender
        }
    }

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = trib_on_white_peace_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = trib_on_white_peace_desc_defender
			}
			desc = trib_on_white_peace_desc
		}
	}
	
	on_white_peace = {
        #EP2 accolade glory gain for doing ok against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes } 
        scope:attacker = {
            add_prestige = -250
        }
    }
	
	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = trib_on_defeat_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = trib_on_defeat_desc_defender
			}
			desc = trib_on_defeat_desc_attacker
		}
	}

    on_defeat = {
		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_attacker_war_end_glory_gain_high_effect = yes }
        scope:attacker = {
            add_prestige = -300
            pay_long_term_gold = { 
                target = scope:defender 
                gold = 300 
            }
        }
    }

    on_invalidated_desc = {
        desc = trib_on_invalidated_desc
    }

}

permament_tributary_war_cb = {
    group = tributary
	ai_only_against_neighbors = yes

	war_name = perma_trib_war_cb
	my_war_name = perma_trib_war_me # Used when the claimant and attacker is the same person
	war_name_base = perma_trib_war_m_b
	my_war_name_base = perma_trib_war_m_b

    truce_days = 970

	allowed_for_character = {
		#NB#
		trigger_if = {
			limit = { is_ai = no }
			prestige_level >= low_prestige_level #Fine with the player doing this with less restrictions but don't want the AI doing it a lot
		}
		trigger_else = { prestige_level >= medium_prestige_level }
		#End NB#
		
		# Ensure that this is only done every now and then.
		is_independent_ruler = yes
		highest_held_title_tier >= tier_kingdom
		
        #scope:defender = {
        #    primary_title = {
        #        tier >= tier_county
        #    }
        #    scope:attacker.primary_title.tier >= scope:defender.primary_title.tier 
        #    NOT = { exists = var:my_suzerain }
        #    custom_description = {
        #        text = not_a_tributary
        #        subject = scope:defender
        #        NOT = {
        #            scope:attacker = {
        #                is_target_in_variable_list = { name = all_tributaries target = scope:defender }
        #            }
        #        }
        #    }            
        #}
        NAND = {
            scope:attacker = {
                primary_title = {
                    tier < tier_county
                }
                this.primary_title.tier < scope:defender.primary_title.tier  
                exists = var:my_suzerain
            }
			scope:defender = {
            primary_title = {
                tier >= tier_county
            }
            scope:attacker.primary_title.tier >= scope:defender.primary_title.tier 
            NOT = { exists = var:my_suzerain }
            custom_description = {
                text = not_a_tributary
                subject = scope:defender
                NOT = {
                    scope:attacker = {
                        is_target_in_variable_list = { name = all_tributaries target = scope:defender }
                    }
                }
            }            
        }
        }
    }
	#
	allowed_against_character = {
		#MB
		OR = {
			character_is_land_realm_neighbor = scope:attacker
			AND = {
				exists = scope:attacker.liege
				character_is_land_realm_neighbor = scope:attacker.liege
			}
		}
		#
        primary_title = {
            tier >= tier_county			 
        }
        scope:attacker.primary_title.tier >= scope:defender.primary_title.tier 
        NOT = { exists = var:my_suzerain }
        custom_description = {
            text = not_a_tributary
            subject = scope:defender
            NOT = {
                scope:attacker = {
                    is_target_in_variable_list = { name = all_tributaries target = scope:defender }
                }
																			 
										
            }
        }    
    }
	#
    cost = {
        prestige = {
            value = 300
        }
    }

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = perma_trib_on_victory_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = perma_trib_on_victory_desc_defender
			}
			desc = perma_trib_on_victory_desc_attacker
		}
	}

    on_victory = {
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }
        make_tributary = {
            TYPE = tributary_permanent
            SUZERAIN = scope:attacker
            TRIBUTARY = scope:defender
        }
    }

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = perma_trib_on_white_peace_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = perma_trib_on_white_peace_desc_defender
			}
			desc = perma_trib_on_white_peace_desc
		}
	}

	on_white_peace = {
        #EP2 accolade glory gain for doing ok against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes } 
        scope:attacker = {
            add_prestige = -300
							
			 
        }
    }

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = perma_trib_on_defeat_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = perma_trib_on_defeat_desc_defender
			}
			desc = perma_trib_on_defeat_desc
		}
	}

    on_defeat = {
		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_attacker_war_end_glory_gain_high_effect = yes }
        scope:attacker = {
            add_prestige = -300
            pay_long_term_gold = { target = scope:defender gold = 300 }
        }
    }
	on_invalidated_desc = {
		desc = perma_trib_on_invalidated_desc
	}
}

independence_tributary_war_cb = {
    group = tributary
	ai_only_against_neighbors = no

	war_name = independence_tributary_war_cb
	my_war_name = independence_tributary_war_me # Used when the claimant and attacker is the same person
	war_name_base = independence_tributary_war_m_b
	my_war_name_base = independence_tributary_war_m_b

    truce_days = 970

    allowed_against_character = {
        scope:defender = {
            exists = var:suzerain
            is_target_in_variable_list = { name = all_tributaries target = scope:attacker }
        }
    }

    cost = {
        prestige = {
            value = 150
        }
    }


	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = trib_indp_on_victory_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = trib_indp_on_victory_desc_defender
			}
			desc = trib_indp_on_victory_desc
		}
	}

    on_victory = {
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }
        scope:attacker = {
            if = {
                limit = {
                    is_permanent_tributary = {
                        SUZERAIN = scope:defender
                        TRIBUTARY = scope:attacker
                    }
                }
               scope:defender = {
                    unset_tributary = {
                        TRIBUTARY = scope:attacker
                        TRIBUTARY_BASE_TYPE = flag:permanent
                    }  
                }              
            }
            else = {
                scope:defender = {
                    unset_tributary = {
                        TRIBUTARY = scope:attacker
                        TRIBUTARY_BASE_TYPE = flag:non_permanent
                    }  
                }
            }
        }
    }

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = trib_indp_on_white_peace_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = trib_indp_on_white_peace_desc_defender
			}
			desc = trib_indp_on_white_peace_desc
		}
	}

	on_white_peace = {
        #EP2 accolade glory gain for doing ok against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes } 
        scope:attacker = {
            add_prestige = -150
        }
    }


	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = trib_indp_on_defeat_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = trib_indp_on_defeat_desc_defender
			}
			desc = trib_indp_on_defeat_desc
		}
	}

    on_defeat = {
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_attacker_war_end_glory_gain_high_effect = yes }
        scope:attacker = {
            add_prestige = -300
            pay_long_term_gold = { target = scope:defender gold = 150 }
        }
    }

    on_invalidated_desc = {
        desc = trib_indp_on_invalidated_desc
    }

}